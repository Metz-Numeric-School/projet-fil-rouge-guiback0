events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Hide nginx version
    server_tokens off;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Define upstream services (use Railway URLs)
    upstream backend {
        server access-mns-manager-qa.up.railway.app:443;
    }
    
    upstream frontend {
        server projet-fil-rouge-guiback0-qa.up.railway.app:443;
    }

    server {
        listen 80;
        server_name _;

        # Backend manager routes
        location /manager/ {
            limit_req zone=login burst=10 nodelay;
            proxy_pass https://backend/manager/;
            proxy_set_header Host access-mns-manager-qa.up.railway.app;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
        }

        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass https://backend/api/;
            proxy_set_header Host access-mns-manager-qa.up.railway.app;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
        }

        # Assets routes
        location /assets/ {
            proxy_pass https://backend/assets/;
            proxy_set_header Host access-mns-manager-qa.up.railway.app;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            
            # Cache static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Frontend routes (catch-all)
        location / {
            proxy_pass https://frontend;
            proxy_set_header Host projet-fil-rouge-guiback0-qa.up.railway.app;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}